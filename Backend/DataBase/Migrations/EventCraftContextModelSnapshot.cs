// <auto-generated />
using System;
using DataBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(EventCraftContext))]
    partial class EventCraftContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataBase.Models.Caracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Caracteristica", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadPersonas")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FranjaHoraria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("HoraExtra")
                        .HasColumnType("boolean");

                    b.Property<int>("SalonId")
                        .HasColumnType("integer");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.ReservaServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int>("ReservaId")
                        .HasColumnType("integer");

                    b.Property<int>("ServicioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId");

                    b.HasIndex("ServicioId");

                    b.ToTable("ReservaServicio", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.Salon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<float>("DimensionesMt2")
                        .HasColumnType("real");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecioHora")
                        .HasColumnType("numeric");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlImagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Salon", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.SalonCaracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CaracteristicaId")
                        .HasColumnType("integer");

                    b.Property<int>("SalonId")
                        .HasColumnType("integer");

                    b.Property<int>("Valor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("SalonId");

                    b.ToTable("SalonCaracteristica", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.SalonServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric");

                    b.Property<int>("SalonId")
                        .HasColumnType("integer");

                    b.Property<int>("ServicioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.HasIndex("ServicioId");

                    b.ToTable("SalonServicio", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Servicio", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClaveHasheada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apellido = "usuario",
                            ClaveHasheada = "$2a$10$zGO8.UGzTn2yR4DwgLZsnOwhdkz8B5VJ6b6KQ7gnHlSPxKNarZcLq",
                            Correo = "superUsuario@superUsuario.com",
                            Nombre = "super",
                            NombreUsuario = "superUsuario",
                            Rol = "Admin"
                        });
                });

            modelBuilder.Entity("DataBase.Models.Reserva", b =>
                {
                    b.HasOne("DataBase.Models.Salon", "Salon")
                        .WithMany("Reservas")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataBase.Models.ReservaServicio", b =>
                {
                    b.HasOne("DataBase.Models.Reserva", "Reserva")
                        .WithMany("Servicios")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.Servicio", "Servicio")
                        .WithMany("Reservas")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("DataBase.Models.SalonCaracteristica", b =>
                {
                    b.HasOne("DataBase.Models.Caracteristica", "Caracteristica")
                        .WithMany("Salones")
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.Salon", "Salon")
                        .WithMany("Caracteristicas")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caracteristica");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("DataBase.Models.SalonServicio", b =>
                {
                    b.HasOne("DataBase.Models.Salon", "Salon")
                        .WithMany("Servicios")
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.Servicio", "Servicio")
                        .WithMany("Salones")
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("DataBase.Models.Caracteristica", b =>
                {
                    b.Navigation("Salones");
                });

            modelBuilder.Entity("DataBase.Models.Reserva", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("DataBase.Models.Salon", b =>
                {
                    b.Navigation("Caracteristicas");

                    b.Navigation("Reservas");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("DataBase.Models.Servicio", b =>
                {
                    b.Navigation("Reservas");

                    b.Navigation("Salones");
                });

            modelBuilder.Entity("DataBase.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
